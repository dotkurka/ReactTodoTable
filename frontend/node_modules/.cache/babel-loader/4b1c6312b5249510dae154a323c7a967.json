{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    users: []\n  },\n  reducers: {\n    addUser: (state, action) => {\n      state.users.push(action.payload);\n    },\n\n    removeUser(state, action) {\n      state.users.filter(post => post.id !== action.payload);\n    }\n\n  }\n});\nexport const {\n  addUser,\n  removeUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","users","reducers","addUser","state","action","push","payload","removeUser","filter","post","id","actions","reducer"],"sources":["/Users/minik/Documents/Task/ReactTodoTable/frontend/src/features/store/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"users\",\n    initialState: {\n        users: [],\n    },\n    reducers: {\n        addUser: (state, action) => {\n            state.users.push(action.payload);\n        },\n        removeUser(state, action) {\n            state.users.filter((post) => post.id !== action.payload);\n        },\n    },\n});\n\nexport const { addUser, removeUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,OADoB;EAE1BC,YAAY,EAAE;IACVC,KAAK,EAAE;EADG,CAFY;EAK1BC,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxBD,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;IACH,CAHK;;IAINC,UAAU,CAACJ,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAhD;IACH;;EANK;AALgB,CAAD,CAA7B;AAeA,OAAO,MAAM;EAAEJ,OAAF;EAAWK;AAAX,IAA0BV,SAAS,CAACc,OAA1C;AAEP,eAAed,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}