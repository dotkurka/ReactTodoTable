{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport userSlice from \"./userSlice\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\nconst saga = createSagaMiddleware();\nconst rootReducers = combineReducers({\n  users: userSlice\n});\nconst store = configureStore({\n  reducer: rootReducers,\n  middleware: [saga]\n});\nsaga.run(rootSaga);\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","userSlice","createSagaMiddleware","rootSaga","saga","rootReducers","users","store","reducer","middleware","run"],"sources":["/Users/minik/Documents/Task/ReactTodoTable/frontend/src/features/store/index.js"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport userSlice from \"./userSlice\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nconst saga = createSagaMiddleware();\n\nconst rootReducers = combineReducers({\n    users: userSlice,\n});\n\nconst store = configureStore({\n    reducer: rootReducers,\n    middleware: [saga],\n});\n\nsaga.run(rootSaga);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,IAAI,GAAGF,oBAAoB,EAAjC;AAEA,MAAMG,YAAY,GAAGN,eAAe,CAAC;EACjCO,KAAK,EAAEL;AAD0B,CAAD,CAApC;AAIA,MAAMM,KAAK,GAAGP,cAAc,CAAC;EACzBQ,OAAO,EAAEH,YADgB;EAEzBI,UAAU,EAAE,CAACL,IAAD;AAFa,CAAD,CAA5B;AAKAA,IAAI,CAACM,GAAL,CAASP,QAAT;AAEA,eAAeI,KAAf"},"metadata":{},"sourceType":"module"}