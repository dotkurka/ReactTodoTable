{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: [],\n  reducers: {\n    addUser(state, action) {\n      state.users.push(action.payload);\n    },\n\n    removeUser(state, action) {\n      state.users.filter(post => post.id !== action.payload);\n    }\n\n  }\n});\nexport const {\n  addUser,\n  removeUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","reducers","addUser","state","action","users","push","payload","removeUser","filter","post","id","actions","reducer"],"sources":["/Users/minik/Documents/Task/ReactTodoTable/frontend/src/features/store/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"users\",\n    initialState: [],\n    reducers: {\n        addUser(state, action) {\n            state.users.push(action.payload);\n        },\n        removeUser(state, action) {\n            state.users.filter((post) => post.id !== action.payload);\n        },\n    },\n});\n\nexport const { addUser, removeUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,OADoB;EAE1BC,YAAY,EAAE,EAFY;EAG1BC,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACnBD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBF,MAAM,CAACG,OAAxB;IACH,CAHK;;IAINC,UAAU,CAACL,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACE,KAAN,CAAYI,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAhD;IACH;;EANK;AAHgB,CAAD,CAA7B;AAaA,OAAO,MAAM;EAAEL,OAAF;EAAWM;AAAX,IAA0BV,SAAS,CAACc,OAA1C;AAEP,eAAed,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}